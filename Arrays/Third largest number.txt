Third largest element
Difficulty: EasyAccuracy: 45.04%Submissions: 179K+Points: 2Average Time: 15m
Given an array, arr of positive integers. Find the third largest element in it. Return -1 if the third largest element is not found.

Examples:

Input: arr[] = [2, 4, 1, 3, 5]
Output: 3
Explanation: The third largest element in the array [2, 4, 1, 3, 5] is 3.
Input: arr[] = [10, 2]
Output: -1
Explanation: There are less than three elements in the array, so the third largest element cannot be determined.
Input: arr[] = [5, 5, 5]
Output: 5
Explanation: In the array [5, 5, 5], the third largest element can be considered 5, as there are no other distinct elements.
Expected Time Complexity: O(n)
Expected Space Complexity: O(1)

Constraints:
1 ≤ arr.size ≤ 105
1 ≤ arr[i] ≤ 105


Solution:

class Solution {
    int thirdLargest(int arr[]) {
        // Your code here
        
        if(arr.length<3){
            return -1;
        } 
        int first=Integer.MIN_VALUE;
        int sec=Integer.MIN_VALUE;
        int thi=Integer.MIN_VALUE;
        
        for(int i=0;i<arr.length;i++){
            int num=arr[i];
            if(num>first){
                thi=sec;
                sec=first;
                first=num;
            }
            else if(num>sec){
                thi=sec;
                sec=num;
            }
            else if( num>thi){
                thi=num;
            }
        }
        return thi;
    
    }
}