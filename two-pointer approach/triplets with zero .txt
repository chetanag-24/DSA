Given an array arr[] of integers, determine whether it contains a triplet whose sum equals zero. Return true if such a triplet exists, otherwise, return false.

Examples:

Input: arr[] = [0, -1, 2, -3, 1]
Output: true
Explanation: The triplet [0, -1, 1] has a sum equal to zero.
Input: arr[] = [1, 2, 3]
Output: false
Explanation: No triplet with a sum of zero exists.
Input: arr[] = [-5, 3, 2, -1, 0, 1]
Output: true
Explanation: The triplet [-5, 3, 2] has a sum equal to zero.
Constraints:
1 ≤ arr.size() ≤ 103
-106 ≤ arr[i] ≤ 106

Solution:
class Solution {
    public boolean findTriplets(int[] arr) {
        // code here.
        
        Arrays.sort(arr);
        int n=arr.length;
        for(int i=0;i<n-2;i++){
            if(i>0 && arr[i]==arr[i-1]) continue;
            int l=i+1;
            int r=n-1;
            while(l<r){
                int  sum=arr[i]+arr[l]+arr[r];
                if(sum==0){
                    return true;
                    
                   
                   
                    
                }
                else if(sum <0){
                    l++;
                    
                }
                else{
                    r--;
                }
            }
        }
        return false;
    }
}